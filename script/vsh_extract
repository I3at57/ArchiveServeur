#!/bin/bash -e

######################################################################################

#######################
#FONCTION : get_values
#Initialise toutes les variables et crée les fichiers temporaires

function get_values() {
	ELDER_DIR=$(pwd) #Place ou le script s'execute
	ARCHIVE="$3" #Nom de l'archive qui doit être présente dans ELDER_DIR

	DEBUT_HEADER=$(head -1 $ARCHIVE | cut -d':' -f1)
	DEBUT_BODY=$(head -1 $ARCHIVE | cut -d':' -f2)
	NBR_LIGNE_ARCH=$(wc -l $ARCHIVE | cut -d' ' -f1)

	#Crée deux fichiers temporaires pour le body et le header
	tail -$(($NBR_LIGNE_ARCH - $DEBUT_BODY)) $ARCHIVE > .tempbody
	tail -$(($NBR_LIGNE_ARCH - $DEBUT_HEADER + 1)) $ARCHIVE | head -$(($DEBUT_BODY - $DEBUT_HEADER + 1)) | sed 's/\\/\//g' > .temphead

	path=$(head -1 .temphead | cut -d' ' -f2)
	NOM_BASE="$(basename $path)"
	NOM_DROP="$(dirname $path)"

	mkdir -p "./$NOM_BASE"
}

function build() {
	while read lines
	do
		#echo $lines
		if [[ $lines =~ ^directory ]]
		then
			drop=$(echo $NOM_DROP | sed 's/\//\\\//g')
			currentdir=".$(echo $lines | cut -d' ' -f2 | sed "s/$drop//g")"
			#echo $currentdir
		else
			if ((1!=2)) #Zone de contrôle
			then
				if [[ $(echo $lines | cut -d' ' -f2) =~ ^d ]]
				then
					mkdir -p $currentdir/$(echo $lines | cut -d' ' -f1)
				elif [[ $lines =~ ^@$ ]]
				then
					:
				else
					nom_file=$(echo $lines | cut -d' ' -f1)
					path="$currentdir/$nom_file"
					# echo $nom_file $path
					debut_file=$(echo $lines | cut -d' ' -f4)
					nbr_file=$(echo $lines | cut -d' ' -f5)
					# echo $debut_file $nbr_file
					marqA=$((debut_file - DEBUT_BODY + nbr_file - 1))
					head -$marqA .tempbody | tail -$nbr_file > $path

					droits=$(echo $lines | cut -d' ' -f2)
					user=${droits:1:3}
					group=${droits:4:3}
					other=${droits:7:3}

					chmod u=$user $path
					chmod g=$group $path
					chmod o=$other $path	
				fi
			fi
		fi
	done < .temphead
}

######################################################################################

# Vérifie la présence des arguments
if [[ $# -ne 3 ]]; then 
    echo "Usage: vsh_create <host> <port> <nom_archive>"
    exit 1
fi

get_values $1 $2 $3
build

rm .temphead .tempbody
